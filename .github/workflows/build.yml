name: Build
permissions:
  contents: write
on:
  push:
    tags:
      - "*"
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: false
env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10
defaults:
  run:
    shell: bash
jobs:
  upload-assets:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-22.04
          - target: aarch64-unknown-linux-musl
            os: ubuntu-22.04
          - target: aarch64-apple-darwin
            os: macos-14
          - target: aarch64-pc-windows-msvc
            os: windows-2022
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-22.04
          - target: x86_64-unknown-linux-musl
            os: ubuntu-22.04
          - target: x86_64-apple-darwin
            os: macos-12
          - target: x86_64-pc-windows-msvc
            os: windows-2022
          - target: x86_64-unknown-freebsd
            os: ubuntu-22.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/setup-cross-toolchain-action@v1
        if: startsWith(matrix.os, 'ubuntu') && !contains(matrix.target, '-musl')
        with:
          target: ${{ matrix.target }}
      - uses: taiki-e/install-action@cross
        if: contains(matrix.target, '-musl')
      - run: echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >> "${GITHUB_ENV}"
        if: endsWith(matrix.target, 'windows-msvc')
      - name: build binary for unix
        if: ${{ !contains(matrix.target, 'windows') && !contains(matrix.os, 'windows') }}
        run: |
          set -x
          rustup target add ${{ matrix.target }}
          cargo build --release --bin cargo-ci-template --target ${{ matrix.target }}
          archive=${{ format('cargo-ci-template-{0}', matrix.target) }}
          checksum="sha256"
          mkdir -p bin
          cp ${{ format('target/{0}/release/cargo-ci-template', matrix.target) }} bin
          tar acf "${PWD}/${archive}.tar.gz" bin README.md LICENSE
          shasum -a "$checksum" "${archive}.tar.gz" >"${archive}.tar.gz.${checksum}"
      - name: build binary for windows
        if: ${{ contains(matrix.target, 'windows') || contains(matrix.os, 'windows') }}
        run: |
          set -x
          rustup target add ${{ matrix.target }}
          cargo build --release --bin cargo-ci-template --target ${{ matrix.target }}
          archive=${{ format('cargo-ci-template-{0}', matrix.target) }}
          checksum="sha256"
          mkdir -p bin
          cp ${{ format('target/{0}/release/cargo-ci-template.exe', matrix.target) }} bin
          tar acf "${PWD}/${archive}.tar.gz" bin README.md LICENSE
          7z a "${PWD}/${archive.zip}" bin README.md LICENSE
          shasum -a "$checksum" "${archive}.tar.gz" >"${archive}.tar.gz.${checksum}"
          shasum -a "$checksum" "${archive}.zip" >"${archive}.zip.${checksum}"
      - name: After Build
        run: |
          echo "ls -lah"
          ls -lah
      - name: Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            "*.tar.gz"
            "*.zip"
            "*.sha256"
